React  = 3
React + Redux =2
GraphQl + Apollo + React = 1
Github  
Docker = 1
Nginx = 1

React Hooks
React Context API

3 = javascript/bootstrap 
30 = 25-30

Total = 6

HTML / CSS

---------------------------
NodeJs
https://nodejs.org/en/download/
https://github.com/
https://github.com/Aakashdeveloper
https://code.visualstudio.com/

scaffolding

node -v

node package
node_modules
npm package

 Local Packages
 Global Packages
 --Build/Test/Run

.jar/.wars
dlls
gems


/**************************
  package.json
**************************/
json
[
    {
        name:"john",
        class:"UI"
    },
    {
        name:"eva",
        class:"React"
    }
]
/**************************
   Step For package.json
**************************/
> Navigate to folder using cmd/terminal
> npm init
> Answer Question
> write "yes"

/**************************
   Install Local Packages
**************************/
> Navigate to folder using cmd/terminal
> npm install zone.js  / npm i zone.js / npm install zone.js --save

/**************************
   Install Global Packages
**************************/
Windows
> Open cmd as admin
> Navigate to folder using cmd/terminal
> npm install -g zone.js

Mac/linux
> Navigate to folder using cmd/terminal
> sudo npm i -g @aakashdevelper/create-node-app





/**************************
  Setup React APP
**************************
/Windows
> Open cmd as admin
> npm install -g create-react-app
> Navigate to folder using cmd/terminal
> create-react-app firstapp
> cd firstapp
> npm start



Mac/linux
> Open the terminal
> sudo npm install -g create-react-app
> Navigate to folder using cmd/terminal
> create-react-app firstapp
> cd firstapp
> npm start


/***********
  Function 
*************/
var a = 10
var b = 20
a+b 

Es5
function add(a,b){
  return a+b
}

Es6
var add = (a,b) => {return a+b}

add(1,2)


/***********
  Class
*************/
//Es5
function person1(name) {
   this.legs=2,
   this.color='white'
   this.name = name
}

function person2() {
   this.hands=2,
   this.color='red',
   this.city='London'
}

person1.prototype = new person2()

var ram = new person1()

var car = {
  coloe:'red'
}

constructor()

class geo{
  constructor(){
    this.legs=2,
    this.color='red'
  }
}

class language extends geo{
  constructor(legs,color,lat, long){
    super(legs,color)
    this.lat = lat;
    this.long = long
  }
}

var hindi = new language(10.1,20.1)

/*************
  Declare variable
******************/
Declare & Assign
var  Redecalre & reassign
let  cannot Redecalre & but reassign
const cannot Redecalre & cannot reassign


var a 
a = 10

/*************
 Component in react
******************/
> Functional         > Class Based
Light in Weight         Heavy as compare to Functional
We use rendering        For logical part
Cannot Handle State     We Can handle state



State                Props
LocalVariable        Helf to transfer state/data

Component A    Props        Component B
State A      -------->       State B



ternery operator
var a = 10
undefined
a > 10 ? "hii":"bie"
"bie"
a == 10 ? "hii":"bie"
"hii"

https://www.w3schools.com/jsref/jsref_map.asp
https://www.w3schools.com/jsref/jsref_filter.asp

//map

var a =[1,2,3,4,5]

function squr(a){
  return a*a
}

a.map(squr)
a.map((data)=>{return data*data})

var a =[1,2,3,4,5]
function testval(a){
  return a%2==0
}

a.filter((a)=>{return a%2==0})
a.map(testval)


var a = [0,1,2,3]

function mylogic(a){
  return a*1
}

a.map(mylogic) =>
a.filter(mylogic) =>


var a = [1,2,3,4,5]
undefined
a.indexOf(2)
1
a.indexOf(5)
4
a.indexOf(6)
-1
a.indexOf("a")
-1


 npm i react-router-dom
/*********************
  Fake API
***********************/
npm i -g json-server

json-server --watch db.json --port 8900
npm i redux react-redux redux-promise react-slick



//////GiThub/////
git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/testgit1.git
git push -u origin master


git add .
git commit -m "first commit"
git push

 git checkout -b newtest


 npm i enzyme enzyme-adapter-react-16 react-test-renderer --save-dev


 server {
        listen       8081;
        server_name  localhost;

        location / {
	     root   /var/www/react-app;
            index  index.html index.htm;
        }
    }
